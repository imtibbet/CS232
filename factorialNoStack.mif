-- program memory file
DEPTH = 256;
WIDTH = 16;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0 : 1111100000000000; -- MOVEI A C Execute RA <= 0
1 : 1111100000001001; -- MOVEI A C Execute RB <= 1
2 : 0110001000000000; -- OPORT S Send register RB to the output port
3 : 1001000111000000; -- SUB A B C Execute RA <= RA - ONES
4 : 1111000000000010; -- MOVE A C Execute RC <= RA
5 : 1000001000000001; -- ADD A B C Execute RB <= RB + RA
6 : 0011000100001010; -- BRAO L Branch to address 10 if the CR overflow flag is set
7 : 1000010111000010; -- ADD A B C Execute RC <= RC + ONES
8 : 0011000000000010; -- BRAZ L Branch to address 2 if the CR zero flag is set
9 : 0010000000000101; -- BRA L Unconditional branch to address 5
10 : 0011110000000000; -- HALT execute the halt/exit instruction
[11..255] : 0011110000000000; -- HALT execute the halt/exit instruction
END